# old style function
sub monitorNtp {
  my $base=shift;$base = ".$base";
  my $o=shift;
  my $nsrv=shift;
  my $t=gettimeofday();
  my $cmd="/usr/sbin/ntpdate -t $cmd_timeout -q4 $nsrv";
  my $v;

  foreach (`$cmd`) {
    chomp;
    $v=(split )[9] if ( /time server/ );
  }
  my $r = $? >> 8;
  $$o{$base. '.1.1'} = $v;
  $$o{$base. '.2.1'} = $cmd;
  $$o{$base. '.2.2'} = gettimeofday()-$t;
  $$o{$base. '.2.3'} = $r;
  return $r;
}
# apache httpd mod_status dashboard

#Total Accesses: 58760
#Total kBytes: 37099
#CPULoad: .0188875
#Uptime: 426632
#ReqPerSec: .13773
#BytesPerSec: 89.0448
#BytesPerReq: 646.518
#BusyWorkers: 1
#IdleWorkers: 99

#Scoreboard Key:
#   "_" Waiting for Connection, 
#   "W" Sending Reply, 
#   "R" Reading Request,
#   "K" KeepAlive (read), 
#   "D" DNS Lookup, 

sub apacheStatusMIB {
  my $i=shift;$i = ".$i";
  my $o=shift;
  my $url=shift;
  my $t=gettimeofday();
  my $cmd="curl -s -m $cmd_timeout $url";

  foreach (`$cmd`) {
    chomp;
    my $s=$_;
    if ( /Scoreboard/ ) {
      $$o{'apsWaitingForConnection' . $i}=$s=~tr/_/_/; 
      $$o{'apsSendingReply' . $i}=$s=~tr/W/W/; 
      $$o{'apsReadingRequest' . $i}=$s=~tr/R/R/; 
      $$o{'apsKeepAlive' . $i}=$s=~tr/K/K/; 
      $$o{'apsDNSLookup' . $i}=$s=~tr/D/D/; 
    } elsif ( /^Total Accesses/ ) {
      $$o{'apsTotalAccesses' . $i} = ( split /: /, $s )[1];
    } elsif ( /^CPULoad/ ) {
      $$o{'apsCpuLoad' . $i} = ( split /: /, $s )[1];
    } elsif ( /^Uptime/ ) {
      $$o{'apsUptime' . $i} = ( split /: /, $s )[1];
    } elsif ( /^BusyWorkers/ ) {
      $$o{'apsBusyWorkers' . $i} = ( split /: /, $s )[1];
    } elsif ( /^IdleWorkers/ ) {
      $$o{'apsIdleWorkers' . $i} = ( split /: /, $s )[1];
    } elsif ( /^ReqPerSec/ ) {
      $$o{'apsReqPersSec' . $i} = ( split /: /, $s )[1];
    } elsif ( /^BytesPerSec/ ) {
      $$o{'apsBytesPerSec' . $i} = ( split /: /, $s )[1];
    } elsif ( /^BytesPerReq/ ) {
      $$o{'apsBytesPerReq' . $i} = ( split /: /, $s )[1];
    }
  }
  my $r = $? >> 8;
  $$o{'apsIndex' . $i} = $i;
  $$o{'apsIndex' . $i} =~s/\.//;
  $$o{'apsFuncExecTime' . $i} = sprintf('%.3f',scalar gettimeofday() - $t);
  $$o{'apsFuncExecStatus' . $i} = $r;
  $$o{'apsUrl' . $i} = $url;
  return  $r;
}

sub ntpSyncMIB {
  my $base=shift;
  my $o=shift;
  my $nsrv=shift;
  my $t=gettimeofday();
  my $cmd="/usr/sbin/ntpdate -t $cmd_timeout -q4 $nsrv";
  my $v;

  foreach (`$cmd`) {
    chomp;
    $v=(split )[9] if ( /time server/ );
  }
  my $r = $? >> 8;
  $$o{'ntpSyncStatus'} = sprintf('%.3f', $v);
  $$o{'ntpSyncServer'} = $nsrv;
  $$o{'ntpSyncFuncExecTime'} = sprintf('%.3f',scalar gettimeofday() - $t);
  $$o{'ntpSyncExecStatus'} = $r;
  return $r;
}

sub procCountMIB {
  my $base=shift;
  my $o=shift;
  my $t=gettimeofday();
  my $cmd='top -b -n1 | awk \'/^Tasks/{print $2 " " $4 " " $6 " " $8 " " $10}\'';
  my ($total, $running, $sleeping, $stopped, $zombie);

  foreach (`$cmd`) {
    chomp;
    ($total, $running, $sleeping, $stopped, $zombie)=split;
  }
  my $r = $? >> 8;
  $$o{'procTotal'} = $total;
  $$o{'procRunning'} = $running;
  $$o{'procSleeping'} = $sleeping;
  $$o{'procStopped'} = $stopped;
  $$o{'procZombie'} = $zombie;
  $$o{'procFuncExecTime'} = sprintf('%.3f',scalar gettimeofday() - $t);
  $$o{'procExecStatus'} = $r;
  return $r;
}
  
sub ip_conntrackMIB {
  my $base=shift;
  my $o=shift;
  my $t=gettimeofday();
  my $cmd="cat /proc/sys/net/ipv4/netfilter/ip_conntrack_count /proc/sys/net/ipv4/ip_conntrack_max | tr '\n' ' '";
  my ($loaded,$count, $max, $r);

  $loaded=(-f "/proc/sys/net/ipv4/ip_conntrack_max")?1:0;
  if ( $loaded ) {
    foreach (`$cmd`) {
      chomp;
      ($count, $max)=split;
    }
    $r = $? >> 8;
  } else {
    $count = 0;
    $max = 0;
    $r = 0;
  }
  $$o{'ip-conntrackLoaded'} = $loaded;
  $$o{'ip-conntrackCount'} = $count;
  $$o{'ip-conntrackMax'} = $max;
  $$o{'ip-conntrackFuncExecTime'} = sprintf('%.3f',scalar gettimeofday() - $t);
  $$o{'ip-conntrackExecStatus'} = $r;
  return $r;
}

return 1;
