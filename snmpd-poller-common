use warnings;
use strict;

use Sys::Syslog qw(:standard :macros);

our $subAgentDir;
our ($reg_oid, $poller_cycle, $stale_time, $log_to_console, $cmd_timeout, $shm_size);
our @oDescr;
return 1;

sub logMessage {
  my $level = shift;
  my $msg = shift;
  openlog( "snmpd-poller", 'pid', LOG_DAEMON );
  syslog ( $level, $msg );
  closelog;
  print STDERR "$msg\n" if defined($log_to_console) && "$log_to_console" ne "0";
}

sub readConfig {
  logMessage(LOG_INFO, "Reading config ...");
  open(CONFIG,"${subAgentDir}/snmpd-poller.conf") or die;
  while(<CONFIG>) {
    chomp;
    s/ //g;
    next if ( /^(#|$)/ );
    my @c=split /=/, $_, 2;
    die "error $#c" if $#c != 1;
    if ($c[0] eq 'reg_oid') {
      $reg_oid=$c[1];
    } elsif ($c[0] eq 'poller_cycle') {
      $poller_cycle=$c[1];
    } elsif ($c[0] eq 'stale_time') {
      $stale_time=$c[1];
    } elsif ($c[0] eq 'log_to_console') {
      $log_to_console=$c[1];
    } elsif ($c[0] eq 'cmd_timeout') {
      $cmd_timeout=$c[1];
    } elsif ($c[0] eq 'shm_size') {
      $shm_size=$c[1];
    } elsif ($c[0] eq 'function') {
      push @oDescr, [ split /,/, $c[1] ];
    } else {
      die "error <$c[0]>";  
    }
  }
}
